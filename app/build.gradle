apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.baby.project.projectbaby"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation files('libs/AMap2DMap_5.2.0_AMapLocation_3.8.0_20180201.jar')
    implementation 'com.google.code.gson:gson:2.8.1'

    // LeanCloud 基础包
    implementation 'cn.leancloud.android:avoscloud-sdk:v4.6.4'

    // 推送与实时聊天需要的包
    implementation('cn.leancloud.android:avoscloud-push:v4.6.4@aar') { transitive = true }

    // LeanCloud 统计包
    implementation 'cn.leancloud.android:avoscloud-statistics:v4.6.4'

    // cloudDialog
    implementation project(':clouddialog')

    // eventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Logger
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.

    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'

    // auto dispose
    implementation "com.uber.autodispose:autodispose:$auto_dispose_version"
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$auto_dispose_version"

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'

    //

    // multidex
    implementation 'com.android.support:multidex:1.0.3'

    // 图片裁剪及压缩
    implementation 'com.jph.takephoto:takephoto_library:4.0.3'

    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // Java8 support for Lifecycles
    implementation 'android.arch.lifecycle:common-java8:1.1.1'

    // Room (use 1.1.0-beta2 for latest beta)
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    // RxJava support for Room (use 1.1.0-beta2 for latest alpha)
    implementation 'android.arch.persistence.room:rxjava2:1.0.0'

    // ReactiveStreams support for LiveData
    implementation 'android.arch.lifecycle:reactivestreams:1.1.1'

    // OkHttp logger
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
}

// resolve multi module support library gradle build bug
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.1.0'
            }
        }
    }
}